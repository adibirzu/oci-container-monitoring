# Prometheus Configuration for OCI Management Agent
# Auto-generated by Terraform

global:
  scrape_interval: ${scrape_interval}s
  scrape_timeout: ${scrape_timeout}s
  evaluation_interval: ${scrape_interval}s

  external_labels:
    environment: 'production'
    region: 'oci'
    metrics_namespace: '${metrics_namespace}'
%{ for key, value in additional_labels ~}
    ${key}: '${value}'
%{ endfor ~}

scrape_configs:
  - job_name: '${job_name}'
    metrics_path: '${metrics_path}'

    static_configs:
%{ for target in targets ~}
      - targets: ['${target}']
        labels:
          instance: '${target}'
%{ endfor ~}

    # Relabel configurations
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: localhost:9090

    # Metric relabeling
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: '(container_.*|process_.*|go_.*)'
        action: keep
      - source_labels: [__name__]
        target_label: oci_namespace
        replacement: '${metrics_namespace}'

  # Docker container metrics (if available)
  - job_name: 'docker'
    metrics_path: '/metrics'
    static_configs:
%{ for target in targets ~}
      - targets: ['${target}']
%{ endfor ~}

    # Filter for Docker-specific metrics
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: '(container_.*|docker_.*)'
        action: keep

  # Node exporter metrics (system metrics)
  - job_name: 'node'
    metrics_path: '/metrics'
    static_configs:
%{ for target in targets ~}
      - targets: ['${replace(target, ":.*", "")}:9100']
%{ endfor ~}

    # Keep only relevant system metrics
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: '(node_cpu_.*|node_memory_.*|node_disk_.*|node_network_.*|node_filesystem_.*)'
        action: keep
